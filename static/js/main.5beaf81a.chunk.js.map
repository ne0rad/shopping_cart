{"version":3,"sources":["Components/Cart.js","Components/Header.js","Pages/Home.js","Pages/Products.js","Pages/Contacts.js","Pages/NotFound.js","Components/Main.js","Components/Footer.js","App.js","index.js"],"names":["Cart","cart","cartQuantity","clearCart","removeFromCart","changeQuantity","cartOpen","toggleCart","ProductsJSON","getTotalPrice","total","i","length","price","Math","round","toFixed","products","id","map","className","name","onClick","alert","checkOut","Header","to","width","height","viewBox","d","fill","Home","Products","addToCart","openCart","getCartQuantity","index","indexOf","product","description","type","min","max","value","onChange","e","parseInt","target","Contacts","Main","path","element","NotFound","Footer","App","useState","setCart","setCartQuantity","setCartOpen","setProducts","quantity","newCart","newQuantity","splice","push","updateSessionStorage","window","sessionStorage","setItem","JSON","stringify","useEffect","loadedCart","parse","getItem","loadedQuantity","productsArray","addProductsToStateAsArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5beaf81a.chunk.js","sourcesContent":["function Cart({ cart, cartQuantity, removeFromCart, changeQuantity, clearCart, cartOpen, toggleCart, ProductsJSON, products }) {\n\n    function checkOut() {\n        let total = getTotalPrice();\n        alert('You have been charged £' + total + ' on your fake credit card!');\n        clearCart();\n        toggleCart();\n    }\n\n    function getTotalPrice() {\n        let total = 0;\n        for (let i = 0; i < cart.length; i++) {\n            total += ProductsJSON[cart[i]].price * cartQuantity[i];\n        }\n        return (Math.round(total * 100) / 100).toFixed(2);\n    }\n\n    return (\n        <>\n\n            {\n                cartOpen && (\n                    <div id=\"Cart\">\n                        {cart.length > 0 ? (\n                            <div>\n                                <ul>\n                                    {cart.map((id, i) => {\n                                        return (\n                                            <li key={id}>\n                                                <div className=\"title-text\">{ProductsJSON[id].name}</div> <div className=\"description-text\">\n                                                    Units: {cartQuantity[i] + ' '}\n                                                    Price: £{(Math.round(ProductsJSON[id].price * cartQuantity[i] * 100) / 100).toFixed(2)}\n                                                </div>\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                                <div className=\"title-text\">Total: £{getTotalPrice()}</div>\n                                <br />\n                                <button className=\"btn\" onClick={() => checkOut()}>Checkout</button>\n                                <button className=\"btn\" onClick={() => clearCart()}>Clear Cart</button>\n                            </div>\n                        ) : (\n                            <div>\n                                No items in the cart\n                            </div>\n                        )}\n                        <button className=\"btn btn-red\" onClick={() => toggleCart()}>Close</button>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default Cart;\n","import { Link } from 'react-router-dom';\n\nfunction Header({ toggleCart, cart }) {\n    return (\n        <div id=\"Header\">\n            <div id=\"header-logo\">\n                ⦾ NeoTech ⦾\n            </div>\n            <div id=\"menu\">\n                <Link className=\"menu-item\" to={'/'}>Home</Link>\n                <Link className=\"menu-item\" to={'/products'}>Products</Link>\n                <Link className=\"menu-item\" to={'/contacts'}>Contacts</Link>\n\n                <div className=\"menu-item\" onClick={toggleCart}>\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                        <path d=\"M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6\n                     7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1\n                      0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"/>\n                    </svg>\n                </div>\n                {\n                    cart.length > 0 && (\n                        <div id=\"cart-count\">\n                            {cart.length}\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","function Home() {\n\n  return (\n    <div id=\"Home\" className=\"main\">\n      <h1>Home</h1>\n    </div>\n  );\n}\n\nexport default Home;\n","function Products({ cart, cartQuantity, addToCart, changeQuantity, toggleCart, openCart, products }) {\n\n  function getCartQuantity(id) {\n    let index = cart.indexOf(id);\n    if (index > -1) {\n      return cartQuantity[index];\n    } else {\n      return 0;\n    }\n  }\n\n  return (\n    <div id=\"Products\" className=\"main\">\n      <h1>Products</h1>\n      <ul>\n        {products.map((product) => {\n          return (\n            <li key={product.id}>\n              <div className=\"title-text\">{product.name}</div>\n              <div className=\"description-text\">{product.description}</div>\n              £{product.price}\n              <span> Units:</span>\n              <input\n                name=\"quantity\"\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                value={getCartQuantity(product.id)}\n                onChange={(e) => changeQuantity(product.id, parseInt(e.target.value))}\n              />\n              <button className=\"btn\" onClick={() => addToCart(product.id)}>ADD</button>\n              <br />\n              <br />\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Products;\n","function Contacts() {\n    return (\n        <div id=\"Contacts\" className=\"main\">\n            <h1>Contacts</h1>\n        </div>\n    );\n}\n\nexport default Contacts;\n","function Home() {\n\n    return (\n      <div id=\"NotFound\" className=\"main\">\n        <h1>Page Not Found</h1>\n      </div>\n    );\n  }\n  \n  export default Home;\n  ","import { Routes, Route } from 'react-router-dom';\nimport Home from '../Pages/Home';\nimport Products from '../Pages/Products';\nimport Contacts from '../Pages/Contacts';\nimport NotFound from '../Pages/NotFound';\n\nfunction Main({ cart, cartQuantity, addToCart, changeQuantity, toggleCart, openCart, ProductsJSON, products }) {\n\n    return (\n        <Routes>\n\n            <Route path={'/'} element={<Home />} />\n            <Route path={'/products'} element={<Products\n                cart={cart}\n                cartQuantity={cartQuantity}\n                addToCart={addToCart}\n                changeQuantity={changeQuantity}\n                toggleCart={toggleCart}\n                openCart={openCart}\n                ProductsJSON={ProductsJSON}\n                products={products}\n            />} />\n            <Route path={'/contacts'} element={<Contacts />} />\n            <Route path=\"*\" element={<NotFound />} />\n\n        </Routes>\n    )\n}\n\nexport default Main;\n","function Footer() {\n    return (\n        <div id=\"Footer\">\n            <div className=\"footer-item\">\n                Made by ne0rad\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import { HashRouter } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Cart from \"./Components/Cart\";\nimport Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\nimport Footer from \"./Components/Footer\";\nimport ProductsJSON from './Products/products.json';\n\nfunction App() {\n    const [cart, setCart] = useState([]);\n    const [cartQuantity, setCartQuantity] = useState([]);\n    const [cartOpen, setCartOpen] = useState(false);\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        let loadedCart = JSON.parse(window.sessionStorage.getItem('cart'));\n        let loadedQuantity = JSON.parse(window.sessionStorage.getItem('quantity'));\n        if(!loadedCart) loadedCart = [];\n        if(!loadedQuantity) loadedQuantity = [];\n        setCart(loadedCart);\n        setCartQuantity(loadedQuantity);\n        addProductsToStateAsArray();\n    }, []);\n\n    // add item to cart. if already in cart, increase quantity\n    function addToCart(id) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = newCart.indexOf(id);\n        if(index === -1) {\n            newCart.push(id);\n            newQuantity.push(1);\n        } else {\n            newQuantity[index]++;\n        }\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    // Take ProductsJSON object and add every object to state as an array\n    function addProductsToStateAsArray() {\n        const productsArray = [];\n        for (let product in ProductsJSON) {\n            productsArray.push(ProductsJSON[product]);\n        }\n        setProducts(productsArray);\n    }\n\n    // change item quantity. remove item from a cart if quantity is 0. Add if doesn't exist in cart\n    function changeQuantity(id, quantity) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = cart.indexOf(id);\n        if (quantity === 0) {\n            newCart.splice(index, 1);\n            newQuantity.splice(index, 1);\n        } else {\n            if (index === -1) {\n                newCart.push(id);\n                newQuantity.push(quantity);\n            } else {\n                newQuantity[index] = quantity;\n            }\n        }\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    function removeFromCart(id) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = cart.indexOf(id);\n        newCart.splice(index, 1);\n        newQuantity.splice(index, 1);\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    function clearCart() {\n        setCart([]);\n        setCartQuantity([]);\n        updateSessionStorage([], []);\n    }\n\n    function toggleCart() {\n        setCartOpen(!cartOpen);\n    }\n\n    function openCart() {\n        setCartOpen(true);\n    }\n\n    function updateSessionStorage(cart, quantity) {\n        window.sessionStorage.setItem('cart', JSON.stringify(cart));\n        window.sessionStorage.setItem('quantity', JSON.stringify(quantity));\n    }\n\n    return (\n        <div id=\"content\">\n            <Cart\n                cart={cart}\n                cartQuantity={cartQuantity}\n                removeFromCart={removeFromCart}\n                changeQuantity={changeQuantity}\n                clearCart={clearCart}\n                cartOpen={cartOpen}\n                toggleCart={toggleCart}\n                ProductsJSON={ProductsJSON}\n                products={products}\n            />\n            <HashRouter>\n                <Header\n                    toggleCart={toggleCart}\n                    cart={cart}\n                />\n                <Main\n                    cart={cart}\n                    cartQuantity={cartQuantity}\n                    addToCart={addToCart}\n                    changeQuantity={changeQuantity}\n                    toggleCart={toggleCart}\n                    openCart={openCart}\n                    ProductsJSON={ProductsJSON}\n                    products={products}\n                />\n            </HashRouter>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}