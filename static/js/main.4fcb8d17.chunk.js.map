{"version":3,"sources":["Components/CartItem.js","Components/Cart.js","Components/Header.js","Pages/Home.js","Pages/Products.js","Pages/Contacts.js","Pages/NotFound.js","Components/Main.js","Components/Footer.js","App.js","index.js"],"names":["CartItem","product","quantity","removeFromCart","changeQuantity","className","name","price","onClick","id","Cart","cart","cartQuantity","clearCart","cartOpen","toggleCart","ProductsJSON","getTotalPrice","total","i","length","Math","round","toFixed","products","map","item","index","alert","checkOut","Header","to","width","height","viewBox","d","fill","Home","Products","addToCart","openCart","indexOf","getCartQuantity","description","Contacts","Main","path","element","NotFound","Footer","App","useState","setCart","setCartQuantity","setCartOpen","setProducts","newCart","newQuantity","splice","push","updateSessionStorage","window","sessionStorage","setItem","JSON","stringify","useEffect","loadedCart","parse","getItem","loadedQuantity","productsArray","addProductsToStateAsArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fcb8d17.chunk.js","sourcesContent":["function CartItem({ product, quantity, removeFromCart, changeQuantity }) {\n    return (\n        <div className=\"cart-item\">\n            <span className=\"title-text\">{product.name}</span>\n            <div className=\"title-description\">\n                {quantity} x <span className=\"price-text\">£{product.price}</span>\n                <button className=\"btn btn-remove\" onClick={() => removeFromCart(product.id)}>Remove</button>\n\n            </div>\n            <br />\n        </div>\n    );\n}\n\nexport default CartItem;","import CartItem from \"./CartItem\";\n\nfunction Cart({ cart, cartQuantity, removeFromCart, changeQuantity, clearCart, cartOpen, toggleCart, ProductsJSON, products }) {\n\n    function checkOut() {\n        let total = getTotalPrice();\n        alert('You have been charged £' + total + ' on your fake credit card!');\n        clearCart();\n        toggleCart();\n    }\n\n    function getTotalPrice() {\n        let total = 0;\n        for (let i = 0; i < cart.length; i++) {\n            total += ProductsJSON[cart[i]].price * cartQuantity[i];\n        }\n        return (Math.round(total * 100) / 100).toFixed(2);\n    }\n\n    return (\n        <>\n            {cartOpen && (\n                <div id=\"Cart\">\n                    {cart.length > 0 ? (\n                        <div>\n                            {cart.map((item, index) => (\n                                <CartItem\n                                    key={index}\n                                    product={ProductsJSON[item]}\n                                    quantity={cartQuantity[index]}\n                                    removeFromCart={() => removeFromCart(index)}\n                                    changeQuantity={changeQuantity}\n                                />\n                            ))}\n                            <div className=\"title-text\">Total: £{getTotalPrice()}</div>\n                            <br />\n                            <button className=\"btn\" onClick={() => checkOut()}>Checkout</button>\n                        </div>\n                    ) : (\n                        <div className=\"title-text\">\n                            No items in the cart\n                        </div>\n                    )}\n                    <button className=\"btn btn-red\" onClick={() => toggleCart()}>Close</button>\n                </div>\n            )\n            }\n        </>\n    )\n}\n\nexport default Cart;\n","import { Link } from 'react-router-dom';\n\nfunction Header({ toggleCart, cart }) {\n    return (\n        <div id=\"Header\">\n            <div id=\"header-logo\">\n                ⦾ NeoTech ⦾\n            </div>\n            <div id=\"menu\">\n                <Link className=\"menu-item\" to={'/'}>Home</Link>\n                <Link className=\"menu-item\" to={'/products'}>Products</Link>\n                <Link className=\"menu-item\" to={'/contacts'}>Contacts</Link>\n\n                <div className=\"menu-item\" onClick={toggleCart}>\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                        <path d=\"M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6\n                     7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1\n                      0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"/>\n                    </svg>\n                </div>\n                {\n                    cart.length > 0 && (\n                        <div id=\"cart-count\">\n                            {cart.length}\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","function Home() {\n\n  return (\n    <div id=\"Home\" className=\"main\">\n      <h1>Home</h1>\n    </div>\n  );\n}\n\nexport default Home;\n","function Products({ cart, cartQuantity, addToCart, changeQuantity, toggleCart, openCart, products }) {\n\n  function getCartQuantity(id) {\n    let index = cart.indexOf(id);\n    if (index > -1) {\n      return cartQuantity[index];\n    } else {\n      return 0;\n    }\n  }\n\n  return (\n    <div id=\"Products\" className=\"main\">\n      <h1>Products</h1>\n      <ul className=\"products\">\n        {products.map((product) => {\n          let quantity = getCartQuantity(product.id);\n          return (\n            <li key={product.id} className=\"product\">\n              <div className=\"title-text\">{product.name}</div>\n              <div className=\"description-text\">{product.description}</div>\n              <div className=\"add-div\">\n                <div className=\"price-text\">£{product.price}</div>\n                {quantity > 0 &&\n                  (\n                    <>\n                      <span className=\"description-text\"> Quantity: </span>\n                      <button\n                        className=\"btn btn-quantity\"\n                        onClick={() => quantity > 0 && changeQuantity(product.id, quantity - 1)}\n                      >\n                        -\n                      </button>\n                      <span className=\"quantity-text\">{quantity}</span>\n                    </>)\n                }\n                <button className={quantity > 0 ? \"btn btn-quantity\" : \"btn btn-add\"} onClick={() => addToCart(product.id)}>{quantity > 0 ? \"+\" : \"Add to Cart\"}</button>\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Products;\n","function Contacts() {\n    return (\n        <div id=\"Contacts\" className=\"main\">\n            <h1>Contacts</h1>\n        </div>\n    );\n}\n\nexport default Contacts;\n","function Home() {\n\n    return (\n      <div id=\"NotFound\" className=\"main\">\n        <h1>Page Not Found</h1>\n      </div>\n    );\n  }\n  \n  export default Home;\n  ","import { Routes, Route } from 'react-router-dom';\nimport Home from '../Pages/Home';\nimport Products from '../Pages/Products';\nimport Contacts from '../Pages/Contacts';\nimport NotFound from '../Pages/NotFound';\n\nfunction Main({ cart, cartQuantity, addToCart, changeQuantity, toggleCart, openCart, ProductsJSON, products }) {\n\n    return (\n        <Routes>\n\n            <Route path={'/'} element={<Home />} />\n            <Route path={'/products'} element={<Products\n                cart={cart}\n                cartQuantity={cartQuantity}\n                addToCart={addToCart}\n                changeQuantity={changeQuantity}\n                toggleCart={toggleCart}\n                openCart={openCart}\n                ProductsJSON={ProductsJSON}\n                products={products}\n            />} />\n            <Route path={'/contacts'} element={<Contacts />} />\n            <Route path=\"*\" element={<NotFound />} />\n\n        </Routes>\n    )\n}\n\nexport default Main;\n","function Footer() {\n    return (\n        <div id=\"Footer\">\n            <div className=\"footer-item\">\n                Made by ne0rad\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import { HashRouter } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Cart from \"./Components/Cart\";\nimport Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\nimport Footer from \"./Components/Footer\";\nimport ProductsJSON from './Products/products.json';\n\nfunction App() {\n    const [cart, setCart] = useState([]);\n    const [cartQuantity, setCartQuantity] = useState([]);\n    const [cartOpen, setCartOpen] = useState(false);\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        // Getting session storage information if availabe\n        let loadedCart = JSON.parse(window.sessionStorage.getItem('cart'));\n        let loadedQuantity = JSON.parse(window.sessionStorage.getItem('quantity'));\n        if(!loadedCart) loadedCart = [];\n        if(!loadedQuantity) loadedQuantity = [];\n        setCart(loadedCart);\n        setCartQuantity(loadedQuantity);\n        addProductsToStateAsArray();\n    }, []);\n\n    function addToCart(id) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = newCart.indexOf(id);\n        if(index === -1) {\n            newCart.push(id);\n            newQuantity.push(1);\n        } else {\n            if(newQuantity[index] < 10) newQuantity[index]++;\n        }\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    function addProductsToStateAsArray() {\n        const productsArray = [];\n        for (let product in ProductsJSON) {\n            productsArray.push(ProductsJSON[product]);\n        }\n        setProducts(productsArray);\n    }\n\n    function changeQuantity(id, quantity) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = cart.indexOf(id);\n        if (quantity === 0) {\n            newCart.splice(index, 1);\n            newQuantity.splice(index, 1);\n        } else {\n            if (index === -1) {\n                newCart.push(id);\n                newQuantity.push(quantity);\n            } else {\n                newQuantity[index] = quantity;\n            }\n        }\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    function removeFromCart(id) {\n        let newCart = [...cart];\n        let newQuantity = [...cartQuantity];\n        let index = cart.indexOf(id);\n        newCart.splice(index, 1);\n        newQuantity.splice(index, 1);\n        setCart(newCart);\n        setCartQuantity(newQuantity);\n        updateSessionStorage(newCart, newQuantity);\n    }\n\n    function clearCart() {\n        setCart([]);\n        setCartQuantity([]);\n        updateSessionStorage([], []);\n    }\n\n    function toggleCart() {\n        setCartOpen(!cartOpen);\n    }\n\n    function openCart() {\n        setCartOpen(true);\n    }\n\n    function updateSessionStorage(cart, quantity) {\n        window.sessionStorage.setItem('cart', JSON.stringify(cart));\n        window.sessionStorage.setItem('quantity', JSON.stringify(quantity));\n    }\n\n    return (\n        <div id=\"content\">\n            <Cart\n                cart={cart}\n                cartQuantity={cartQuantity}\n                removeFromCart={removeFromCart}\n                changeQuantity={changeQuantity}\n                clearCart={clearCart}\n                cartOpen={cartOpen}\n                toggleCart={toggleCart}\n                ProductsJSON={ProductsJSON}\n                products={products}\n            />\n            <HashRouter>\n                <Header\n                    toggleCart={toggleCart}\n                    cart={cart}\n                />\n                <Main\n                    cart={cart}\n                    cartQuantity={cartQuantity}\n                    addToCart={addToCart}\n                    changeQuantity={changeQuantity}\n                    toggleCart={toggleCart}\n                    openCart={openCart}\n                    ProductsJSON={ProductsJSON}\n                    products={products}\n                />\n            </HashRouter>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}